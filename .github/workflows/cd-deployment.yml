name: "cd-deployment"
on:
  workflow_call:
    inputs:
      ENVIRONMENT_NAME:
        description: "Environment where terraform workflows will be deployed to"
        required: true
        type: string
      AWS_REGION:
        description: "AWS region"
        required: true
        type: string
      ROLE_DURATION_SECONDS:
        description: "Role duration"
        required: false
        type: number
      ROLE_SESSION_NAME:
        description: "Role session name"
        required: false
        type: string
      TF_STATE_BUCKET:
        description: "AWS S3 bucket for Terraform state"
        required: true
        type: string
      TF_DYNAMO_TABLE:
        description: "AWS DynamoDB table for Terraform lock file"
        required: true
        type: string
      TF_VERSION:
        description: "Terraform version"
        required: false
        type: string
    secrets:
      AWS_ROLE:
        required: true


permissions:
  id-token: write
  contents: read
jobs:
  plan:
    name: "cd-plan-${{ inputs.ENVIRONMENT_NAME }}"
    environment: ${{ inputs.ENVIRONMENT_NAME }}
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Get TF variables from GH environment
      - name: Get TF vars
        uses: ./.github/actions/get-vars
        with:
          CONFIG: ${{ vars.CONFIG }}

      - name: Plan deployment to ${{ inputs.ENVIRONMENT_NAME }}
        id: plan
        uses: ./.github/actions/cd-plan
        with:
          ENVIRONMENT_NAME: ${{ inputs.ENVIRONMENT_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          ROLE_DURATION_SECONDS: ${{ inputs.ROLE_DURATION_SECONDS }}
          ROLE_SESSION_NAME: ${{ inputs.ROLE_SESSION_NAME }}
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_DYNAMO_TABLE: ${{ vars.TF_DYNAMO_TABLE }}
          TF_VERSION: ${{ vars.TF_VERSION }}
          AWS_ROLE: ${{ secrets.AWS_ROLE }}
    outputs:
      changes_present: ${{ steps.plandeploy.outputs.PLAN_RESULT }}

  apply:
    name: "cd-apply-${{ inputs.ENVIRONMENT_NAME }}"
    environment: ${{ inputs.ENVIRONMENT_NAME }}
    needs: plan
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Get TF variables from GH environment
      - name: Get TF vars
        uses: ./.github/actions/get-vars
        with:
          CONFIG: ${{ vars.CONFIG }}

      - name: Apply to ${{ inputs.ENVIRONMENT_NAME }}
        uses: ./.github/actions/cd-apply
        with:
          ENVIRONMENT_NAME: ${{ inputs.ENVIRONMENT_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          ROLE_DURATION_SECONDS: ${{ inputs.ROLE_DURATION_SECONDS }}
          ROLE_SESSION_NAME: ${{ inputs.ROLE_SESSION_NAME }}
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_DYNAMO_TABLE: ${{ vars.TF_DYNAMO_TABLE }}
          TF_VERSION: ${{ vars.TF_VERSION }}
          AWS_ROLE: ${{ secrets.AWS_ROLE }}

