name: 'plan'

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment

env:
  GITHUB_TOKEN: ${{ github.token }}
  AWS_REGION : "eu-west-2"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    #env:
    #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

      #- name: Hello
      #  uses: ./.github/actions/hello-world@main

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install TFSwitch
        run: |
          sudo apt install curl
          curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | sudo -E bash -
          
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: latest

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Show version
        run: tflint --version

      - name: Checkout actions-oidc-debugger
        uses: actions/checkout@v3
        with:
          repository: github/actions-oidc-debugger
          ref: main
          token: ${{ secrets.checkoutpat }}
          path: ./.github/actions/actions-oidc-debugger

      - name: Debug OIDC Claims
        uses: ./.github/actions/actions-oidc-debugger
        with:
          audience: 'https://github.com/github'

      - name: Checkout
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.DEPLOYMENT_ROLE }}
          role-session-name: ghsession
          aws-region: ${{ env.AWS_REGION }}

      #- name: Get environment configuration
      #  run: |
      #    # echo "${{vars.CONFIG}}" | sed 's/./& /g' > inputs.yml
      ##    # echo "Trick to echo GitHub Actions Secret:  "
      #    printf "${{vars.CONFIG}}" > inputs.yml

      - name: Get environment configuration
        run: |
          printf '${{vars.CONFIG}}' > terraform.tfvars.json

      - name: Find out where we are
        run: |
          cat terraform.tfvars.json

      - name: Init TFLint
        run: tflint --init
        
      - name: Run TFLint
        run: tflint -f compact


      - name: Run a plan
        run: |
          terragrunt run-all plan


      
